<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 启用基于注解的配置 -->
    <!--<context:annotation-config />-->
    <!-- 定义controller扫描包 扫描配置的base-package包下的所有使用了@Component注解的类，并且将它们自动注册到容器中，同时也扫描@Controller，@Service，@Respository这三个注解，因为他们是继承自@Component-->
    <context:component-scan base-package="com.wlt">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"></context:exclude-filter>
    </context:component-scan>

    <bean id="springUtil" class="com.wlt.util.SpringUtils"/>
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:sysparam.properties</value>
            </list>
        </property>
        <property name="fileEncoding" value="UTF-8"></property>
    </bean>
    <bean id="jedisPoolUtil" class="com.wlt.util.JedisPoolUtil"
          destroy-method="destroy">
        <constructor-arg>
            <value>${redis.host}</value>
        </constructor-arg>
        <constructor-arg>
            <value>${redis.port}</value>
        </constructor-arg>
        <constructor-arg>
            <value>${redis.maxIdle}00</value>
        </constructor-arg>
        <constructor-arg>
            <value>${redis.maxTotal}00</value>
        </constructor-arg>
        <constructor-arg>
            <value>true</value>
        </constructor-arg>
        <constructor-arg>
            <value>100000</value>
        </constructor-arg>
        <constructor-arg>
            <value>300000</value>
        </constructor-arg>
        <constructor-arg>
            <value>${redis.password}</value>
        </constructor-arg>
    </bean>

    <!-- spring thread pool executor -->
    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <!-- 线程池维护线程的最少数量 -->
        <property name="corePoolSize" value="10"/>
        <!-- 允许的空闲时间 -->
        <property name="keepAliveSeconds" value="60"/>
        <!-- 线程池维护线程的最大数量 -->
        <property name="maxPoolSize" value="200"/>
        <!-- 缓存队列 -->
        <property name="queueCapacity" value="10"/>
        <!-- 对拒绝task的处理策略 -->
        <property name="rejectedExecutionHandler">
            <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy"/>
        </property>
    </bean>
</beans>